<?xml version="1.0" encoding="UTF-8" ?>

<project name="PlantUML" description="Provides PlantUML integration" default="help">

    <!--Properties-->
    <resolvepath propertyName="dir.output" path="./resources/output/"/>
    <resolvepath propertyName="dir.input" path="./resources/puml/"/>
    <resolvepath propertyName="dir.tmp" path="./resources/tmp/"/>
    <property name="file.version" value="./resources/plantuml.version.txt"/>


    <!--Basic help-->
    <target name="help">
        <echo>
            Targets:
            $ phing test # Tests bin/plantuml and bin/plantuml.jar
            $ phing update # Download to last version of PlantUML
            $ phing -l # Full list of targets
            $ phing diagnostics # Useful info to run in IDE
        </echo>
    </target>


    <!--Update bin/plantuml.jar-->
    <target name="update"
            depends="jar:update, test, checksum, readme:update"
            description="Update project with latest version of PlantUML"/>


    <!--Update README.md-->
    <target name="readme:update"
            description="Sets current PlantUML version in README.md"
            depends="jar:save-version, checksum">
        <!--version-->
        <reflexive file="./README.md">
            <filterchain>
                <replaceregexp>
                    <regexp pattern="&lt;!--version:start--&gt;[[:space:][:alnum:][:punct:]]*&lt;!--version:end--&gt;"
                            replace="&lt;!--version:start--&gt;${line.separator}${plantuml.version}${line.separator}&lt;!--version:end--&gt;"
                            modifiers="U"/>

                    <regexp pattern="&lt;!--md5:start--&gt;[[:space:][:alnum:][:punct:]]*&lt;!--md5:end--&gt;"
                            replace="&lt;!--md5:start--&gt;${checksum.md5}&lt;!--md5:end--&gt;"
                            modifiers="U"/>

                    <regexp pattern="&lt;!--sha1:start--&gt;[[:space:][:alnum:][:punct:]]*&lt;!--sha1:end--&gt;"
                            replace="&lt;!--sha1:start--&gt;${checksum.sha1}&lt;!--sha1:end--&gt;"
                            modifiers="U"/>
                </replaceregexp>
            </filterchain>
        </reflexive>

    </target>


    <!--Download bin/plantuml.jar-->
    <target name="jar:update" description="Download latest version of PlantUML">
        <delete file="bin/plantuml.jar"/>
        <httpget dir="bin"
                 url="https://sourceforge.net/projects/plantuml/files/latest/download?source=typ_redirect"
                 followRedirects="true"
                 filename="plantuml.jar"/>
    </target>


    <!--${plantuml.version}-->
    <target name="jar:version" description="Prints PlantUML version">
        <exec executable="bin/plantuml" outputProperty="plantuml.output">
            <arg value="-v"/>
        </exec>
        <propertyregex property="plantuml.version"
                       pattern="\bPlantUML Version \d+\.\d+\.\d+\b"
                       subject="${plantuml.output}"
                       match="$0"
                       defaultvalue="-"
                       override="true"/>
        <echo message="${plantuml.version}"/>
    </target>


    <!--resources/plantuml.version.txt-->
    <target name="jar:save-version"
            description="Saves current PlantUML version in text file"
            depends="jar:version">
        <echo message="${plantuml.version}" file="${file.version}"/>
        <notifysend title="Phing" msg="${plantuml.version}" icon="info"/>
    </target>


    <!--Test plantuml.jar and executable-->
    <target name="test" depends="jar:test, executable:test" description="Runs all tests"/>


    <!--Test plantuml.jar-->
    <target name="jar:test" description="Check the correct functioning of plantuml.jar">
        <phingcall target="test:clean"/>
        <phingcall target="jar:run"/>
        <phingcall target="test:validate"/>
    </target>


    <!--Test bin/plantuml-->
    <target name="executable:test" description="Check the correct functioning of plantuml executable">
        <phingcall target="test:clean"/>
        <phingcall target="executable:run"/>
        <phingcall target="test:validate"/>
    </target>


    <!--Execute plantuml.jar-->
    <target name="jar:run" description="Generates .png files with plantuml.jar">
        <mkdir dir="${dir.output}"/>
        <exec executable="java" passthru="true" checkreturn="true">
            <arg value="-jar"/>
            <arg value="bin/plantuml.jar"/>
            <arg value="-verbose"/>
            <arg value="-o"/>
            <arg value="${dir.output}"/>
            <arg value="${dir.input}/*.puml"/>
        </exec>
    </target>


    <!--Testing executable-->
    <target name="executable:run" description="Generates .png files with plantuml executable">
        <mkdir dir="${dir.output}"/>
        <exec executable="bin/plantuml" passthru="true" checkreturn="true">
            <arg value="-verbose"/>
            <arg value="-o"/>
            <arg value="${dir.output}"/>
            <arg value="${dir.input}/*.puml"/>
        </exec>
    </target>


    <!--Clean png files-->
    <target name="test:clean" description="Deletes output dir">
        <delete dir="${dir.output}" verbose="true"/>
    </target>


    <!--Checks png files exists-->
    <target name="test:validate" description="Verifies the existence of .png files">
        <foreach target="test:file-check" param="filename" absparam="filename.absolute">
            <filelist dir="${dir.output}"
                      files="colors.png, colors-azure.png, sequence-diagram.png, testdot.png, version.png"/>
        </foreach>
    </target>


    <!--Helper target, fails if file isn't found-->
    <target name="test:file-check" hidden="true">
        <if>
            <available file="${filename.absolute}"/>
            <then>
                <echo message="OK: ${filename.absolute}"/>
            </then>
            <else>
                <fail message="NOT FOUND: ${filename.absolute}"/>
            </else>
        </if>
    </target>


    <target name="diagnostics">
        <diagnostics/>
    </target>

    <target name="checksum" description="Generate checksums for plantuml.jar">
        <mkdir dir="resources/checksum/"/>
        <!--md5-->
        <filehash file="bin/plantuml.jar" propertyname="checksum.md5" algorithm="md5"/>
        <echo message="${checksum.md5}" file="resources/checksum/plantuml.jar.md5"/>
        <echo message="${checksum.md5}"/>
        <!--sha1-->
        <filehash file="bin/plantuml.jar" propertyname="checksum.sha1" algorithm="sha1"/>
        <echo message="${checksum.sha1}" file="resources/checksum/plantuml.jar.sha1"/>
        <echo message="${checksum.sha1}"/>
    </target>


    <target name="auto-update:clone">
        <!--https://stackoverflow.com/a/50193010/-->
        <gitclone branch="master"
                  repository="https://${GIT_ACCESS_TOKEN}@github.com/jawira/plantuml.git"
                  targetPath="resources/auto-update"/>
    </target>
</project>
